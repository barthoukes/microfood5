//==============================================================================
//  @file       sql_store_part.proto
//  @ingroup    proto database interface
//  @brief		Operations on store
//
//  Messages for storage
//
//  @author     Bart Houkes
//
//------------------------------------------------------------------------------
//  Copyright (c) Bart Houkes, 25-12-2023
//
//  Copyright notice:
//  This software is property of Bart Houkes.
//  Unauthorized duplication and disclosure to third parties is forbidden.
//============================================================================*/

syntax = "proto3";

option csharp_namespace = "store";

package sp;

import "common_types.proto";

// Add these Kotlin-specific options
option java_multiple_files = true;
option java_package = "com.hha.store.part";

service StorePartService
{
    rpc ReduceStorage(TransactionId) returns (common.Empty) {}
    rpc SelectMenuItem(MenuCardItemId) returns (common.StoreItem) {}	
    rpc GetMenuItems(MenuCardId) returns (StoreItemList) {}
    rpc InsertSmurf(NewSmurfRequest) returns (StoreSmurfId) {}
    rpc RemoveStorePart(StorePartId) returns (common.Empty) {}
    rpc CalculateUsagePerYear(ItemId) returns (common.Empty) {}
    rpc CalculateSoldOutDates(ItemId) returns (common.Empty) {}
    rpc CalculateMenuTranslations(ItemId) returns (common.Empty) {}
    rpc CalculateFirstDay(ItemId) returns (common.Empty) {}
    rpc CalculateTotalSold(ItemId) returns (common.Empty) {}
    rpc UpdateSold(ItemId) returns (common.Empty) {}
    rpc GetStorePartFromId(StorePartId) returns (common.StorePart) {}
}

message ItemId
{
    int32 item_id = 1;
}

message MenuCardId
{
    int32 menu_card_id = 1;
}

message MenuCardItemId
{
    int32 menu_card_id = 1;
    int32 menu_item_id = 2;
}

message NewSmurfRequest
{
    int32 menu_item_id = 1;
    int32 smurf_id = 2;
    float percentage = 3;
}

message StoreItemList
{
    repeated common.StoreItem store_item = 2;
}

message StorePartId
{
    int32 store_part_id = 1;
}

message StorePartList
{
    repeated common.StorePart parts = 1;
}

message StoreSmurf
{
    int32    smurf_id =1;
    int32    danger_level =2;
    float    year_consumption =3;
    float    total_sold =4;
    int32    total_ordered =5;
    int32    total_received =6;
    int32    total_cancelled =7;
    float    total_stock =8;
    string   local_name =9;
    string   chinese_name =10;
    string   end_time =11;
}

message StoreSmurfId
{
    int32 store_smurf_id = 1;
}

message TransactionId
{
    int32 transaction_id = 1;
}
